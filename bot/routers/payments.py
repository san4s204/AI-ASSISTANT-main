from __future__ import annotations
from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from bot.services.payments import start_yookassa, start_cryptobot, _cancel_checker, _safe_edit_text
from aiogram import F
from keyboards import (
    keyboard_payment_premium,
    keyboard_sub, keyboard_unsub, keyboard_change_ai,
    r_keyboard_sub, keyboard_return
)

from bot.services.db import get_subscription_until

CB_CANCEL = "pay_cancel"
CB_TO_YK = "pay_switch_yk"
CB_TO_CB = "pay_switch_cb"

router = Router(name="payments")

@router.callback_query(F.data == "payment")
async def cq_payment(callback: types.CallbackQuery):
    # –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–ø–ª–∞—Ç—ã / –≤—ã–±–æ—Ä –∞–≥–µ–Ω—Ç–∞
    res = await get_subscription_until(callback.from_user.id)
    if res:
        try:
            await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard_sub(callback.from_user.id))
        except Exception:
            pass
    else:
        await callback.message.edit_text(
            "üí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n\n1 –º–µ—Å—è—Ü - 599 ‚ÇΩ (7.4 USDT)",
            reply_markup=keyboard_change_ai()
        )

@router.callback_query(F.data == "ai_premium")
async def cq_ai_premium(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n\n1 –º–µ—Å—è—Ü - 599 ‚ÇΩ (7.4 USDT)",
        reply_markup=keyboard_payment_premium()
    )

@router.callback_query(F.data == "yookassa_premium")
async def cq_yookassa(callback: types.CallbackQuery, state: FSMContext):
    await start_yookassa(callback, state, callback.bot)

@router.callback_query(F.data == "cryptobot_premium")
async def cq_crypto_bot(callback: types.CallbackQuery, state: FSMContext):
    await start_cryptobot(callback, state, callback.bot)

@router.callback_query(F.data == "subscribe")
async def subscribe(callback: types.CallbackQuery):
    res = await get_subscription_until(callback.from_user.id)
    if res:
        # –∫–∞–∫ –≤ —Ç–≤–æ—ë–º main.py: –∫–æ—Ä–æ—Ç–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ + –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await callback.message.answer(
            text=f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {res}",
            reply_markup=r_keyboard_sub()
        )
        await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_sub(callback.from_user.id))
    else:
        await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_unsub())

@router.callback_query(F.data == CB_CANCEL)
async def pay_cancel(callback: types.CallbackQuery, state: FSMContext):
    await _cancel_checker(callback.from_user.id)  # –ø–æ–≥–∞—Å–∏–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫–∏
    await state.clear()
    await _safe_edit_text(
        callback.message,
        "–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∑–∞–Ω–æ–≤–æ:",
        reply_markup=keyboard_return()
    )
    await callback.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")