from __future__ import annotations
from aiogram import Router, types
from aiogram import F
from aiogram.filters import Command, CommandStart
from bot.services.db import get_subscription_until, has_accepted_terms, set_terms_accepted
from aiogram.fsm.context import FSMContext
import os

from keyboards import (
    keyboard_sub, keyboard_unsub, keyboard_return, keyboard_terms
)




router = Router(name="start")

# —Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤ .env (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø–æ–¥—Å—Ç–∞–≤—è—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∏)
PRIVACY_URL = os.getenv("TERMS_PRIVACY_URL", "https://example.com/privacy")
PD_URL      = os.getenv("TERMS_PD_URL",      "https://example.com/pd")
OFFER_URL   = os.getenv("TERMS_OFFER_URL",   "https://example.com/offer")
DEMO_VIDEO_FILE_ID = os.getenv("DEMO_VIDEO_FILE_ID", "")  # file_id/URL ‚Äî –µ—Å–ª–∏ –±—É–¥–µ—Ç


def info_text() -> str:
    return (
        "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ —Å–≤–æ–µ–º—É Telegram –±–æ—Ç—É ü§ñ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ CHESS IT !\n\n"
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–º–ø—Ç üìù, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å üìÖ –ª–∏–±–æ –¥—Ä—É–≥–∏–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî –∏ –≥–æ—Ç–æ–≤–æ.\n"
        "–ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ üë®‚Äçüíª, –¥–∞–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –≤–µ—Å—Ç–∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏.\n\n"
        "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
        "‚Äì –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ –≤ @BotFather\n"
        "‚Äì –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ\n"
        "‚Äì –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–º–ø—Ç. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞!\n\n"
        "–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞!\n\n"
        "üìé –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É (—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç)\n"
        "üìé –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ (—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç)"
    )

def terms_text() -> str:
    return (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CHESS IT !\n\n"
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å:\n\n"
        f"‚Ä¢ <a href=\"{PRIVACY_URL}\">–ü–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>\n"
        f"‚Ä¢ <a href=\"{PD_URL}\">–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>\n"
        f"‚Ä¢ <a href=\"{OFFER_URL}\">–î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã</a>\n\n"
        "–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–∏–Ω–∏–º–∞—é¬ª, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."
    )

def welcome_text() -> str:
    return (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CHESS IT !\n\n"
        "üôè –î–ª—è –í–∞—Å –¥–æ—Å—Ç—É–ø–Ω–æ 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n\n"
        "1. –ß–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞. –û–±—â–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞ Telegram. –ü–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–≤. "
        "–ò–∑ –º–∏–Ω—É—Å–æ–≤ ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.\n"
        "2. –ß–µ—Ä–µ–∑ Telegram –∞–∫–∫–∞—É–Ω—Ç (–Ω—É–∂–µ–Ω TG Premium). –ü–ª—é—Å—ã ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–∞—Ç—å –±–æ—Ç–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–∞—Ö. "
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Äî –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (—Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞).\n\n"
        "üß± –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather\n"
        "ü§ñ –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /settings\n"
        "üìù –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /prompt\n"
        "üìÖ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Google –ö–∞–ª–µ–Ω–¥–∞—Ä—å\n"
        "üîî –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"
    )

async def _send_demo_video_if_any(message: types.Message) -> None:
    vid = DEMO_VIDEO_FILE_ID.strip()
    if not vid:
        return
    try:
        await message.answer_video(video=vid, caption="–ö–æ—Ä–æ—Ç–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã")
    except Exception:
        # –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π file_id/URL ‚Äî –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º
        pass

@router.message(CommandStart())
async def start_cmd(message: types.Message):
    uid = message.from_user.id
    # 1) –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –ø—Ä–∏–Ω—è–ª —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
    if not await has_accepted_terms(uid):
        await message.answer(
            text=terms_text(),
            reply_markup=keyboard_terms(),
            disable_web_page_preview=True,
            parse_mode="HTML",
        )
        return

    # 2) –æ–±—ã—á–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π (–ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è): –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç –∏ –º–µ–Ω—é
    res = await get_subscription_until(uid)
    await _send_demo_video_if_any(message)
    if res:
        await message.answer(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard_sub(uid),
        )
    else:
        await message.answer(
            text=welcome_text(),
            disable_web_page_preview=True,
        )
        await message.answer(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard_unsub(),
        )

@router.message(Command("help"))
async def help_cmd(message: types.Message):
    await message.answer(
        "–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @chess_it_manager",
        reply_markup=keyboard_return()
    )

@router.message(Command("info"))
async def info_cmd(message: types.Message):
    await message.answer(
        info_text(),
        reply_markup=keyboard_return()
    )

@router.message(F.text == "üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def info_reply(message: types.Message):
    await message.answer(
        info_text(),
        reply_markup=keyboard_return()
    )

@router.message(F.text == "üí¨ –ü–æ–º–æ—â—å")
async def help_reply(message: types.Message):
    await message.answer(
        "–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @chess_it_manager",
        reply_markup=keyboard_return()
    )

@router.message(F.text.lower().in_(["üß≠ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]))
async def open_main_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_sub(message.from_user.id))

## Callbacks

@router.callback_query(F.data == "info")
async def cq_info(callback: types.CallbackQuery):
    await callback.message.edit_text(
        info_text(),
         reply_markup=keyboard_return()
    )

@router.callback_query(F.data == "help")
async def cq_help(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @chess_it_manager",
        reply_markup=keyboard_return()
    )

@router.callback_query(F.data == "return")
async def cq_return(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    uid = callback.from_user.id

    # üîë –µ—Å–ª–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –µ—â—ë –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    if not await has_accepted_terms(uid):
        await callback.message.edit_text(
            terms_text(),
            reply_markup=keyboard_terms(),
            disable_web_page_preview=True,
            parse_mode="HTML",
        )
        await callback.answer()
        return

    # –†–∞–Ω—å—à–µ –∑–¥–µ—Å—å —Å—Ç–∞–≤–∏–ª–∏ global attempts=500, —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ —Å–µ—Ä–≤–∏—Å ‚Äî —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ.
    res = await get_subscription_until(callback.from_user.id)
    if res:
        await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_sub(callback.from_user.id))
    else:
        await callback.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard_unsub())

@router.callback_query(F.data == "terms_decline")
async def cq_terms_decline(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.\n\n"
        "–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.",
        reply_markup=keyboard_return(),
        parse_mode="HTML",
    )
    await callback.answer()

@router.callback_query(F.data == "terms_accept")
async def cq_terms_accept(callback: types.CallbackQuery):
    uid = callback.from_user.id
    first_time = not await has_accepted_terms(uid)
    await set_terms_accepted(uid)

    # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if DEMO_VIDEO_FILE_ID:
        try:
            await callback.message.answer_video(video=DEMO_VIDEO_FILE_ID, caption="–ö–æ—Ä–æ—Ç–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã")
        except Exception:
            pass

    # —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–°–ø–∞—Å–∏–±–æ!¬ª ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    if first_time:
        await callback.message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ.")

    # –¥–∞–ª—å—à–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π welcome + –º–µ–Ω—é
    res = await get_subscription_until(uid)
    if res:
        await callback.message.answer(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard_sub(uid),
        )
    else:
        await callback.message.answer(
            text=welcome_text(),
            disable_web_page_preview=True,
        )
        await callback.message.answer(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=keyboard_unsub(),
        )
    await callback.answer()