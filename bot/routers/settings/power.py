from __future__ import annotations
import asyncio
from aiogram import Router, types, F
from keyboards import keyboard_sub, keyboard_return, keyboard_unsub, state_bot
from bot.services.db import get_subscription_until, update_user_state, get_user_token_and_doc
from bot.services.google_oauth import has_google_oauth
from .helpers import REQUIRE_GOOGLE, kb_connect_google
from openrouter import run_bot, stop_bot

router = Router(name="settings.power")

@router.callback_query(F.data == "turn_on_off")
async def turn_cb(callback: types.CallbackQuery):
    uid = callback.from_user.id
    current = state_bot(uid)

    if current == "ü§ñ‚ùå –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω":
        if not await get_subscription_until(uid):
            await callback.answer("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞. –ü—Ä–æ–¥–ª–∏—Ç–µ –µ—ë —á–µ—Ä–µ–∑ ¬´üí∞ –û–ø–ª–∞—Ç–∞¬ª.", show_alert=True)
            return

        if REQUIRE_GOOGLE and not await has_google_oauth(uid):
            await callback.message.edit_text("–ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ Google-–∞–∫–∫–∞—É–Ω—Ç:", reply_markup=kb_connect_google(uid))
            await callback.answer()
            return

        token, word_file = await get_user_token_and_doc(uid)
        if not token:
            await callback.message.answer(
                "–ù–µ –∑–∞–¥–∞–Ω API-—Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞.\n"
                "–£–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ ¬´/settings ‚Üí –ò–∑–º–µ–Ω–∏—Ç—å API-—Ç–æ–∫–µ–Ω¬ª.",
                reply_markup=keyboard_return()
            )
            await callback.answer()
            return

        await callback.answer("–ó–∞–ø—É—Å–∫–∞—é –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ ‚úÖ")
        await update_user_state(uid, "active")
        await callback.message.edit_reply_markup(reply_markup=keyboard_sub(uid))
        try:
            await asyncio.sleep(0)
            await run_bot(token, word_file, uid)
        except Exception as e:
            await update_user_state(uid, "stop")
            await callback.message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: {e}", reply_markup=keyboard_return())

    elif current == "ü§ñ‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω":
        await callback.answer("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ ‚ùå")
        await update_user_state(uid, "stop")
        await callback.message.edit_reply_markup(reply_markup=keyboard_sub(uid))
        token, _ = await get_user_token_and_doc(uid)
        try:
            await stop_bot(str(token))
        except Exception:
            pass
    else:
        await callback.message.edit_reply_markup(
            reply_markup=keyboard_sub(uid) if await get_subscription_until(uid) else keyboard_unsub()
        )
        await callback.answer("–û–±–Ω–æ–≤–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
